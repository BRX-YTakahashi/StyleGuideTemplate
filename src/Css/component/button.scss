@charset "UTF-8";
@use "../foundation/function" as f;
@use "../foundation/mixin" as m;
@use "../foundation/variable" as v;


/* ===============================================
  * BUTTON *
=============================================== */
@include m.mqP(lg) {
  /* ===============================================
    * BUTTON *
  =============================================== */
}
@include m.mq(lg) {
  /* ===============================================
    * BUTTON *
  =============================================== */
}



.c-button {

  &__frame {
    --width: auto;
    --max-width: 80%;
    --height: auto;
    --max-height: none;
    --aspect-ratio: auto;
    --padding-horizontal: 4ch;
    --padding-vertical: 2ch;
    --border-radius: 10px;
    --font-size: inherit;
    --font-family: inherit;

    display: grid;
    place-content: center;

    // MEMO: min()関数にまとめるとデフォ値のautoが弾かれてしまうので、max-XXは分離させています。
    width: var(--width);
    max-width: var(--max-width);
    height: var(--height);
    max-height: var(--max-height);
    aspect-ratio: var(--aspect-ratio);

    background-color: var(--color-background);
    padding: var(--padding-vertical) var(--padding-horizontal);
    border: solid 1px var(--color-background);
    border-radius: var(--border-radius);

    color: var(--color-font);
    font-family: var(--font-family);
    font-size: var(--font-size);
    line-height: 1.5;
    word-break: keep-all;

    transition:
      background var(--transitionDuration-fast) var(--transitionTimingFunction-default),
      border var(--transitionDuration-fast) var(--transitionTimingFunction-default),
      box-shadow var(--transitionDuration-fast) var(--transitionTimingFunction-default),
      opacity var(--transitionDuration-fast) var(--transitionTimingFunction-default);

    cursor: pointer;
    user-select: none;


    &:disabled {
      pointer-events: none;
      filter: opacity(.4);
    }

    &--icon {
      --gap: 5%;
      --width-icon: 30px; //FIXME:相対値にしたい
      --aspect-ratio-icon: 1;

      align-items: center;
      gap: var(--gap);
      grid-template-columns: var(--width-icon) auto;

      &-pseudo {
        &::before {
          content: "";

          width: 100%;
          aspect-ratio: var(--aspect-ratio-icon);
          background-image: url('data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2298%22%20height%3D%2296%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M48.854%200C21.839%200%200%2022%200%2049.217c0%2021.756%2013.993%2040.172%2033.405%2046.69%202.427.49%203.316-1.059%203.316-2.362%200-1.141-.08-5.052-.08-9.127-13.59%202.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015%204.934.326%207.523%205.052%207.523%205.052%204.367%207.496%2011.404%205.378%2014.235%204.074.404-3.178%201.699-5.378%203.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283%200-5.378%201.94-9.778%205.014-13.2-.485-1.222-2.184-6.275.486-13.038%200%200%204.125-1.304%2013.426%205.052a46.97%2046.97%200%200%201%2012.214-1.63c4.125%200%208.33.571%2012.213%201.63%209.302-6.356%2013.427-5.052%2013.427-5.052%202.67%206.763.97%2011.816.485%2013.038%203.155%203.422%205.015%207.822%205.015%2013.2%200%2018.905-11.404%2023.06-22.324%2024.283%201.78%201.548%203.316%204.481%203.316%209.126%200%206.6-.08%2011.897-.08%2013.526%200%201.304.89%202.853%203.316%202.364%2019.412-6.52%2033.405-24.935%2033.405-46.691C97.707%2022%2075.788%200%2048.854%200z%22%20fill%3D%22%23fff%22%2F%3E%3C%2Fsvg%3E');
          background-repeat: no-repeat;
          background-size: contain;
        }
      }
    }
  }

  &__icon-wrapper {
    width: 100%;
    aspect-ratio: var(--aspect-ratio-icon);
  }


  &__skin {
    &--main {
      --color-background: var(--color-main);
      --color-font: var(--color-white);
    }

    &--sub-1 {
      --color-background: var(--color-brand-sub1);
      --color-font: var(--color-white);
    }

    &--blue {
      --color-background: var(--color-category-code);
      --color-font: var(--color-white);
    }
  }


  &__animation {
    &--transparent {
      @include m.hover {
        background-color: transparent;

        color: var(--color-background);


        &:active {
          background-color: var(--color-background);

          color: var(--color-font);

          filter: opacity(.6);
        }
      }
    }

    // MEMO: ボツ
    // &--invert {
    //   position: relative;

    //   background: none;
    //   border: none;
    //   overflow: hidden;

    //   &::after {
    //     content: "";

    //     position: absolute;
    //     top: 0;
    //     left: 0;
    //     // z-index: -1;

    //     width: 100%;
    //     height: 100%;
    //     background: var(--color-background);

    //     transition: filter var(--transitionDuration-fast) var(--transitionTimingFunction-default);
    //   }

    //   @include m.hover {
    //     &::after {
    //       filter: invert(1);
    //     }
    //   }
    // }

    &--shadow {
      &-4 {
        @include m.hover {
          box-shadow: var(--elevation-4);

          &:active {
            box-shadow: var(--elevation-8);
            transition: none;
          }
        }
      }

      &-6 {
        @include m.hover {
          box-shadow: var(--elevation-6);

          &:active {
            box-shadow: var(--elevation-12);
            transition: none;
          }
        }
      }

      &-8 {
        @include m.hover {
          box-shadow: var(--elevation-8);

          &:active {
            box-shadow: var(--elevation-16);
            transition: none;
          }
        }
      }
    }
  }
}
